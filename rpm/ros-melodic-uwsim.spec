Name:           ros-melodic-uwsim
Version:        1.4.2
Release:        1%{?dist}
Summary:        ROS uwsim package

Group:          Development/Libraries
License:        GPL
URL:            http://www.irs.uji.es/uwsim/
Source0:        %{name}-%{version}.tar.gz

Requires:       GeographicLib
Requires:       GeographicLib-devel
Requires:       OpenSceneGraph
Requires:       OpenSceneGraph-devel
Requires:       OpenThreads
Requires:       OpenThreads-devel
Requires:       boost-devel
Requires:       boost-python2-devel
Requires:       boost-python3-devel
Requires:       fftw
Requires:       fftw-devel
Requires:       libxml++
Requires:       libxml++-devel
Requires:       mesa-libGL-devel
Requires:       mesa-libGLU-devel
Requires:       muParser-devel
Requires:       ros-melodic-dccomms-ros
Requires:       ros-melodic-geometry-msgs
Requires:       ros-melodic-image-transport
Requires:       ros-melodic-interactive-markers
Requires:       ros-melodic-kdl-parser
Requires:       ros-melodic-nav-msgs
Requires:       ros-melodic-osg-interactive-markers
Requires:       ros-melodic-osg-markers
Requires:       ros-melodic-osg-utils
Requires:       ros-melodic-pcl-ros
Requires:       ros-melodic-pluginlib
Requires:       ros-melodic-resource-retriever
Requires:       ros-melodic-robot-state-publisher
Requires:       ros-melodic-roscpp
Requires:       ros-melodic-sensor-msgs
Requires:       ros-melodic-tf
Requires:       ros-melodic-underwater-sensor-msgs
Requires:       ros-melodic-urdf
Requires:       ros-melodic-uwsim-bullet
Requires:       ros-melodic-uwsim-osgbullet
Requires:       ros-melodic-uwsim-osgocean
Requires:       ros-melodic-uwsim-osgworks
Requires:       ros-melodic-xacro
BuildRequires:  GeographicLib
BuildRequires:  GeographicLib-devel
BuildRequires:  OpenSceneGraph
BuildRequires:  OpenSceneGraph-devel
BuildRequires:  OpenThreads
BuildRequires:  OpenThreads-devel
BuildRequires:  boost-devel
BuildRequires:  boost-python2-devel
BuildRequires:  boost-python3-devel
BuildRequires:  fftw
BuildRequires:  fftw-devel
BuildRequires:  libxml++
BuildRequires:  libxml++-devel
BuildRequires:  mesa-libGL-devel
BuildRequires:  mesa-libGLU-devel
BuildRequires:  muParser-devel
BuildRequires:  ros-melodic-catkin
BuildRequires:  ros-melodic-dccomms-ros
BuildRequires:  ros-melodic-geometry-msgs
BuildRequires:  ros-melodic-image-transport
BuildRequires:  ros-melodic-interactive-markers
BuildRequires:  ros-melodic-kdl-parser
BuildRequires:  ros-melodic-nav-msgs
BuildRequires:  ros-melodic-osg-interactive-markers
BuildRequires:  ros-melodic-osg-markers
BuildRequires:  ros-melodic-osg-utils
BuildRequires:  ros-melodic-pcl-ros
BuildRequires:  ros-melodic-pluginlib
BuildRequires:  ros-melodic-resource-retriever
BuildRequires:  ros-melodic-robot-state-publisher
BuildRequires:  ros-melodic-roscpp
BuildRequires:  ros-melodic-sensor-msgs
BuildRequires:  ros-melodic-tf
BuildRequires:  ros-melodic-underwater-sensor-msgs
BuildRequires:  ros-melodic-urdf
BuildRequires:  ros-melodic-uwsim-bullet
BuildRequires:  ros-melodic-uwsim-osgbullet
BuildRequires:  ros-melodic-uwsim-osgocean
BuildRequires:  ros-melodic-uwsim-osgworks
BuildRequires:  ros-melodic-xacro

%description
UWSim is an UnderWater SIMulator for marine robotics research and development.
UWSim visualizes an underwater virtual scenario that can be configured using
standard modeling software. Controllable underwater vehicles, surface vessels
and robotic manipulators, as well as simulated sensors, can be added to the
scene and accessed externally through ROS interfaces. This allows to easily
integrate the visualization tool with existing control architectures.

%prep
%setup -q

%build
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree that was dropped by catkin, and source it.  It will
# set things like CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/melodic/setup.sh" ]; then . "/opt/ros/melodic/setup.sh"; fi
mkdir -p obj-%{_target_platform} && cd obj-%{_target_platform}
%cmake .. \
        -UINCLUDE_INSTALL_DIR \
        -ULIB_INSTALL_DIR \
        -USYSCONF_INSTALL_DIR \
        -USHARE_INSTALL_PREFIX \
        -ULIB_SUFFIX \
        -DCMAKE_INSTALL_LIBDIR="lib" \
        -DCMAKE_INSTALL_PREFIX="/opt/ros/melodic" \
        -DCMAKE_PREFIX_PATH="/opt/ros/melodic" \
        -DSETUPTOOLS_DEB_LAYOUT=OFF \
        -DCATKIN_BUILD_BINARY_PACKAGE="1" \

make %{?_smp_mflags}

%install
# In case we're installing to a non-standard location, look for a setup.sh
# in the install tree that was dropped by catkin, and source it.  It will
# set things like CMAKE_PREFIX_PATH, PKG_CONFIG_PATH, and PYTHONPATH.
if [ -f "/opt/ros/melodic/setup.sh" ]; then . "/opt/ros/melodic/setup.sh"; fi
cd obj-%{_target_platform}
make %{?_smp_mflags} install DESTDIR=%{buildroot}

%files
/opt/ros/melodic

%changelog
* Mon Nov 11 2019 Mario Prats <marioprats@gmail.com> - 1.4.2-1
- Autogenerated by Bloom

* Mon Nov 11 2019 Mario Prats <marioprats@gmail.com> - 1.4.1-1
- Autogenerated by Bloom

